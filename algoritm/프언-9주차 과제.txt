#include <stdio.h>
#include <math.h> 
#include <limits.h>

#define NUMBER 5



typedef struct City {
	char* name;
	int x;
	int y;

} City;

City stack[NUMBER];
int top = -1;



void push(City element) {
	stack[++top] = element;
}



City pop() {
	return stack[top--];
}


City city[] = {
	{ "0", 0, 0 },
	{ "1", 1, 2 },
	{ "2", 4, 3 },
	{ "3", 5, 2 },
	{ "4", 7, 3 } };


int visited[NUMBER] = { 0 };
int min = INT_MAX;
int totalCount = 0;



int getDistance(City a, City b)
{
	return sqrt((a.x - b.x) * (a.x - b.x) + (a.y - b.y) * (a.y - b.y));
}



void TSP(int start, City city[], int number, int sum, int now)
{
	visited[start] = 1;
	int i, count = 0;
	for (i = 0; i < number; i++)
	{
		if (visited[i] == 0)
		{
			count++;
			visited[i] = 1;
			push(city[i]);
			TSP(start, city, number, sum + getDistance(city[now], city[i]), i);
			visited[i] = 0;
			pop();
		}
	}

	if (count == 0)
	{
		sum = sum + getDistance(city[now], city[start]);
		if (min > sum)
		{
			min = sum;
		}
		totalCount++;
	}
}



int main(void)

{
	TSP(0, city, NUMBER, 0, 0);
	printf("전체 경로의 개수 : %d\n", totalCount);
	printf("최소 거리 : %d\n", min);
	return 0;

}