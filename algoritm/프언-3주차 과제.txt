#include<stdio.h>

int array[8] = { 15,22,13,27,12,10,20,25 };
int pivotpoint = 0;

void quicksort(int start, int end);
void partition(int start, int end);
void printA(int* a, int n);

int main() {
	//퀵소트
	quicksort(0, 7);
	//배열 출력 함수 인수값(배열, 배열 크기)
	printA(array, 8);
	printf("\n");

	return 0;
}

void partition(int start, int end) {
	int i, j, tmp;
	//분활안에서의 피봇 값
	int pivotitem = array[start];
	//피봇의 위치를 저장
	j = start;
	//첫 시작은 피봇이므로 넘겨야 해서 +1
	for (i = start + 1; i <= end; i++) {
		//피봇값 비교후 자리바꿈
		if (array[i] < pivotitem) {
			//피봇 자리값을 한칸 옆으로 옮김
			j++;
			tmp = array[i];
			array[i] = array[j];
			array[j] = tmp;
		}
	}
	/*마지막으로 피봇의 현 위치(계속해서 첫부분에 있었습니다.)를 j(피봇의 변한 자리값)으로 변경*/
	tmp = array[start];
	array[start] = array[j];
	array[j] = tmp;
	//실제 배열의 피봇의 위치를 설정
	pivotpoint = j;
}

void quicksort(int start, int end) {
	if (end > start) {
		partition(start, end);
		quicksort(start, pivotpoint - 1);
		quicksort(pivotpoint + 1, end);
	}
}
//배열 출력 함수 //요건 신경 안써도되요.ㅋ
void printA(int* a, int n) {
	for (int i = 0; i < n; i++) {
		printf("%5d", a[i]);
	}
}