DataInput/Output 
Int -4byte
double - 8byte
UTF 2byte(length필드)+String
10번
synchronize => 특정라인을 보장!
네트워크 6주차
===============================================\
어떤 데이터를 넣으면 SHA-256 256bits 들 값을 내는 알고리즘 Hash 같이 
================================================\
ReturnDigestInterface에서 오류출력
//why error?  계산 도중 실행 => 실행중 결과를 출력 
//sol : 쓰레드가 끝남을 알려주고 => 결과를 출력
//sol1. Polling을 사용 == getter methods 를 생성한다.==flag value를 리턴한다. 계속 물어봄
The solution most novices adopt is to make the getter method return a flag value (orperhaps throw an exception) until the result field is set.

//sol2.Callbacks방법 물어봤다가 대기하는방식
 The trick is that rather than having the main program repeatedly ask each ReturnDigest thread whether it’s finished (like a five-year-old repeatedly asking, “Are we there yet?” on a long car trip, and almost as annoying), you let the thread tell the

스태틱 함수 구현!

좀 더 효율적인 방법 : 부르는 놈에따라 메스드를 호출 할 수있도록 생각 그래서
==================================================
//sol3. 
Runnable 을 쓰레드 풀에 던져서 돌림 : submit => Excecutor
==================================================
Callable : run 메서드가 return 이 있는 메서드  => call 메서드 구현=> Futures (리턴값을 받아옴)
newFixedThreadPool(2) 쓰레드 2개실행
================================================
동기화의 단점 :1. 성능이 나빠진다 2. 데드락확률을 높인다.
1. it exacts a severe performance penalty in many VMs
2. it dramatically increases the chances of deadlock.

해결 : There are a number of techniques that avoid the need for
synchronization entirely. The first is to use local variables instead of fields wherever
possible. 
1. 순서를 잡는다.
2. local 변수를 사용하여라
====================================================


